{"ast":null,"code":"var _jsxFileName = \"D:\\\\CODING\\\\todolist-v4\\\\to-do-list-v4-2\\\\my-app\\\\src\\\\componentes\\\\Header.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Header() {\n  _s();\n\n  const agora = new Date().toLocaleTimeString();\n  const [time, setTime] = React.useState(agora);\n\n  function updateDate() {\n    const m = [\"Janeiro\", \"Fevereiro\", \"Março\", \"Abril\", \"Maio\", \"Junho\", \"Julho\", \"Agosto\", \"Setembro\", \"Aoutubro\", \"Novembro\", \"Dezembro\"];\n    const date = m[new Date().getMonth()];\n    const agora = new Date().toLocaleTimeString();\n    const year = new Date().getFullYear();\n    return setTime(agora);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"header\", {\n    children: /*#__PURE__*/_jsxDEV(\"h1\", {\n      onChange: updateDate,\n      children: [time, \", \", date, \" de \", year]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Header, \"GtSd7JEDNMkVR6Wh8DvmAqAwn7g=\");\n\n_c = Header;\n\nvar _c;\n\n$RefreshReg$(_c, \"Header\");","map":{"version":3,"names":["React","Header","agora","Date","toLocaleTimeString","time","setTime","useState","updateDate","m","date","getMonth","year","getFullYear"],"sources":["D:/CODING/todolist-v4/to-do-list-v4-2/my-app/src/componentes/Header.js"],"sourcesContent":["import React from \"react\";\r\n\r\nexport default function Header(){\r\n\r\n    \r\n    const agora = new Date().toLocaleTimeString();\r\n    \r\n    const [time, setTime] = React.useState(agora);\r\n    \r\n      \r\n    function updateDate(){\r\n        \r\n        const m = [\"Janeiro\", \"Fevereiro\", \"Março\", \"Abril\", \"Maio\", \"Junho\",\"Julho\", \"Agosto\", \"Setembro\", \"Aoutubro\", \"Novembro\", \"Dezembro\"]\r\n        const date = m[new Date().getMonth()];\r\n        const agora = new Date().toLocaleTimeString();\r\n        const year = new Date().getFullYear();\r\n        \r\n        return setTime(agora);\r\n    } \r\n    \r\n         \r\n\r\n    return(\r\n        <header>\r\n            <h1 onChange={updateDate}>{time}, {date} de {year}</h1>\r\n        </header>\r\n    )\r\n}"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;;AAEA,eAAe,SAASC,MAAT,GAAiB;EAAA;;EAG5B,MAAMC,KAAK,GAAG,IAAIC,IAAJ,GAAWC,kBAAX,EAAd;EAEA,MAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBN,KAAK,CAACO,QAAN,CAAeL,KAAf,CAAxB;;EAGA,SAASM,UAAT,GAAqB;IAEjB,MAAMC,CAAC,GAAG,CAAC,SAAD,EAAY,WAAZ,EAAyB,OAAzB,EAAkC,OAAlC,EAA2C,MAA3C,EAAmD,OAAnD,EAA2D,OAA3D,EAAoE,QAApE,EAA8E,UAA9E,EAA0F,UAA1F,EAAsG,UAAtG,EAAkH,UAAlH,CAAV;IACA,MAAMC,IAAI,GAAGD,CAAC,CAAC,IAAIN,IAAJ,GAAWQ,QAAX,EAAD,CAAd;IACA,MAAMT,KAAK,GAAG,IAAIC,IAAJ,GAAWC,kBAAX,EAAd;IACA,MAAMQ,IAAI,GAAG,IAAIT,IAAJ,GAAWU,WAAX,EAAb;IAEA,OAAOP,OAAO,CAACJ,KAAD,CAAd;EACH;;EAID,oBACI;IAAA,uBACI;MAAI,QAAQ,EAAEM,UAAd;MAAA,WAA2BH,IAA3B,QAAmCK,IAAnC,UAA6CE,IAA7C;IAAA;MAAA;MAAA;MAAA;IAAA;EADJ;IAAA;IAAA;IAAA;EAAA,QADJ;AAKH;;GAzBuBX,M;;KAAAA,M"},"metadata":{},"sourceType":"module"}